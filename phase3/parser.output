State 46 conflicts: 1 reduce/reduce
State 59 conflicts: 1 reduce/reduce
State 100 conflicts: 1 shift/reduce
State 119 conflicts: 1 reduce/reduce
State 120 conflicts: 1 reduce/reduce
State 121 conflicts: 1 reduce/reduce
State 122 conflicts: 1 reduce/reduce
State 123 conflicts: 1 reduce/reduce
State 124 conflicts: 1 reduce/reduce
State 125 conflicts: 1 reduce/reduce
State 126 conflicts: 1 reduce/reduce
State 127 conflicts: 1 reduce/reduce
State 128 conflicts: 1 reduce/reduce
State 129 conflicts: 1 reduce/reduce
State 132 conflicts: 1 reduce/reduce
State 158 conflicts: 1 reduce/reduce
State 176 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: liststmt
    2        | %empty

    3 liststmt: liststmt stmt
    4         | stmt

    5 stmt: expr ";"
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | "break" ";"
   11     | "continue" ";"
   12     | block
   13     | funcdef
   14     | ";"

   15 Me: %empty

   16 expr: assignexpr
   17     | term
   18     | expr "+" expr
   19     | expr "-" expr
   20     | expr "*" expr
   21     | expr "/" expr
   22     | expr "%" expr
   23     | expr ">=" expr
   24     | expr ">" expr
   25     | expr "<=" expr
   26     | expr "<" expr
   27     | expr "==" expr
   28     | expr "!=" expr

   29 $@1: %empty

   30 expr: expr $@1 "and" Me expr
   31     | expr "or" Me expr

   32 term: "(" expr ")"
   33     | "-" expr
   34     | "not" expr
   35     | "++" lvalue
   36     | lvalue "++"
   37     | "--" lvalue
   38     | lvalue "--"
   39     | primary

   40 assignexpr: lvalue "=" expr

   41 primary: lvalue
   42        | call
   43        | objectdef
   44        | "(" funcdef ")"
   45        | const

   46 lvalue: ID
   47       | "local" ID
   48       | "::" ID
   49       | member

   50 member: lvalue "." ID
   51       | lvalue "[" expr "]"
   52       | call "." ID
   53       | call "[" expr "]"

   54 call: call "(" elist ")"
   55     | lvalue callsuffix
   56     | "(" funcdef ")" "(" elist ")"

   57 callsuffix: normcall
   58           | methodcall

   59 normcall: "(" elist ")"

   60 methodcall: ".." ID "(" elist ")"

   61 elist: %empty
   62      | elist "," expr
   63      | expr

   64 objectdef: "[" elist "]"
   65          | "[" indexed "]"

   66 indexed: indexed "," indexedelem
   67        | indexedelem

   68 indexedelem: "{" expr ":" expr "}"

   69 $@2: %empty

   70 $@3: %empty

   71 block: "{" $@2 liststmt "}" $@3

   72 $@4: %empty

   73 $@5: %empty

   74 block: "{" $@4 "}" $@5

   75 $@6: %empty

   76 @7: %empty

   77 funcdef: "function" ID $@6 "(" idlist ")" @7 block

   78 $@8: %empty

   79 funcdef: "function" $@8 "(" idlist ")" block

   80 const: INT
   81      | DOUBLE
   82      | STRING
   83      | "nil"
   84      | TRUE
   85      | FALSE

   86 idlist: %empty
   87       | idlist "," ID
   88       | ID

   89 ifprefix: "if" "(" expr ")"

   90 elseprefix: "else"

   91 ifstmt: ifprefix stmt elseprefix stmt
   92       | ifprefix stmt

   93 loopstart: %empty

   94 loopend: %empty

   95 loopstmt: loopstart stmt loopend

   96 whilestart: "while"

   97 whilecond: "(" expr ")"

   98 whilestmt: whilestart whilecond loopstmt

   99 N: %empty

  100 M: %empty

  101 forprefix: "for" "(" elist ";" M expr ";"

  102 forstmt: forprefix N elist ")" N loopstmt N

  103 returnstmt: "return" expr ";"
  104           | "return" ";"


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <strVal> (258) 46 47 48 50 52 60 77 87 88
    STRING <strVal> (259) 82
    INT <intVal> (260) 80
    DOUBLE <realVal> (261) 81
    TRUE <boolVal> (262) 84
    FALSE <boolVal> (263) 85
    "<=" (264) 25
    "<" (265) 26
    "!=" (266) 28
    ">=" (267) 23
    ">" (268) 24
    "==" (269) 27
    "=" (270) 40
    "+" (271) 18
    "-" (272) 19 33
    "++" (273) 35 36
    "--" (274) 37 38
    "*" (275) 20
    "/" (276) 21
    "%" (277) 22
    "if" (278) 89
    "else" (279) 90
    "while" (280) 96
    "for" (281) 101
    "function" (282) 77 79
    "return" (283) 103 104
    "break" <statement> (284) 10
    "continue" <statement> (285) 11
    "and" (286) 30
    "not" (287) 34
    "or" (288) 31
    "local" (289) 47
    "nil" (290) 83
    "[" (291) 51 53 64 65
    "]" (292) 51 53 64 65
    "{" (293) 68 71 74
    "}" (294) 68 71 74
    "(" (295) 32 44 54 56 59 60 77 79 89 97 101
    ")" (296) 32 44 54 56 59 60 77 79 89 97 102
    ";" (297) 5 10 11 14 101 103 104
    "," (298) 62 66 87
    ":" (299) 68
    "::" (300) 48
    "." (301) 50 52
    ".." (302) 60
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program <statement> (50)
        on left: 1 2
        on right: 0
    liststmt <statement> (51)
        on left: 3 4
        on right: 1 3 71
    stmt <statement> (52)
        on left: 5 6 7 8 9 10 11 12 13 14
        on right: 3 4 91 92 95
    Me <labelVal> (53)
        on left: 15
        on right: 30 31
    expr <express> (54)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31
        on right: 5 18 19 20 21 22 23 24 25 26 27 28 30 31 32 33 34 40 51 53 62 63 68 89 97 101 103
    $@1 (55)
        on left: 29
        on right: 30
    term <express> (56)
        on left: 32 33 34 35 36 37 38 39
        on right: 17
    assignexpr <express> (57)
        on left: 40
        on right: 16
    primary <express> (58)
        on left: 41 42 43 44 45
        on right: 39
    lvalue <express> (59)
        on left: 46 47 48 49
        on right: 35 36 37 38 40 41 50 51 55
    member <express> (60)
        on left: 50 51 52 53
        on right: 49
    call <express> (61)
        on left: 54 55 56
        on right: 42 52 53 54
    callsuffix <callVal> (62)
        on left: 57 58
        on right: 55
    normcall <callVal> (63)
        on left: 59
        on right: 57
    methodcall <callVal> (64)
        on left: 60
        on right: 58
    elist <express> (65)
        on left: 61 62 63
        on right: 54 56 59 60 62 64 101 102
    objectdef <express> (66)
        on left: 64 65
        on right: 43
    indexed <express> (67)
        on left: 66 67
        on right: 65 66
    indexedelem <express> (68)
        on left: 68
        on right: 66 67
    block <statement> (69)
        on left: 71 74
        on right: 12 77 79
    $@2 (70)
        on left: 69
        on right: 71
    $@3 (71)
        on left: 70
        on right: 71
    $@4 (72)
        on left: 72
        on right: 74
    $@5 (73)
        on left: 73
        on right: 74
    funcdef <symEntr> (74)
        on left: 77 79
        on right: 13 44 56
    $@6 (75)
        on left: 75
        on right: 77
    @7 (76)
        on left: 76
        on right: 77
    $@8 (77)
        on left: 78
        on right: 79
    const <express> (78)
        on left: 80 81 82 83 84 85
        on right: 45
    idlist <args> (79)
        on left: 86 87 88
        on right: 77 79 87
    ifprefix <labelVal> (80)
        on left: 89
        on right: 91 92
    elseprefix <labelVal> (81)
        on left: 90
        on right: 91
    ifstmt <statement> (82)
        on left: 91 92
        on right: 6
    loopstart (83)
        on left: 93
        on right: 95
    loopend (84)
        on left: 94
        on right: 95
    loopstmt <statement> (85)
        on left: 95
        on right: 98 102
    whilestart <labelVal> (86)
        on left: 96
        on right: 98
    whilecond <labelVal> (87)
        on left: 97
        on right: 98
    whilestmt <statement> (88)
        on left: 98
        on right: 7
    N <labelVal> (89)
        on left: 99
        on right: 102
    M <labelVal> (90)
        on left: 100
        on right: 101
    forprefix <forprefixVal> (91)
        on left: 101
        on right: 102
    forstmt <statement> (92)
        on left: 102
        on right: 8
    returnstmt <statement> (93)
        on left: 103 104
        on right: 9


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    STRING      shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    "-"         shift, and go to state 7
    "++"        shift, and go to state 8
    "--"        shift, and go to state 9
    "if"        shift, and go to state 10
    "while"     shift, and go to state 11
    "for"       shift, and go to state 12
    "function"  shift, and go to state 13
    "return"    shift, and go to state 14
    "break"     shift, and go to state 15
    "continue"  shift, and go to state 16
    "not"       shift, and go to state 17
    "local"     shift, and go to state 18
    "nil"       shift, and go to state 19
    "["         shift, and go to state 20
    "{"         shift, and go to state 21
    "("         shift, and go to state 22
    ";"         shift, and go to state 23
    "::"        shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    liststmt    go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 1

   46 lvalue: ID .

    $default  reduce using rule 46 (lvalue)


State 2

   82 const: STRING .

    $default  reduce using rule 82 (const)


State 3

   80 const: INT .

    $default  reduce using rule 80 (const)


State 4

   81 const: DOUBLE .

    $default  reduce using rule 81 (const)


State 5

   84 const: TRUE .

    $default  reduce using rule 84 (const)


State 6

   85 const: FALSE .

    $default  reduce using rule 85 (const)


State 7

   33 term: "-" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 46
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 8

   35 term: "++" . lvalue

    ID       shift, and go to state 1
    "local"  shift, and go to state 18
    "("      shift, and go to state 47
    "::"     shift, and go to state 24

    lvalue  go to state 48
    member  go to state 33
    call    go to state 49


State 9

   37 term: "--" . lvalue

    ID       shift, and go to state 1
    "local"  shift, and go to state 18
    "("      shift, and go to state 47
    "::"     shift, and go to state 24

    lvalue  go to state 50
    member  go to state 33
    call    go to state 49


State 10

   89 ifprefix: "if" . "(" expr ")"

    "("  shift, and go to state 51


State 11

   96 whilestart: "while" .

    $default  reduce using rule 96 (whilestart)


State 12

  101 forprefix: "for" . "(" elist ";" M expr ";"

    "("  shift, and go to state 52


State 13

   77 funcdef: "function" . ID $@6 "(" idlist ")" @7 block
   79        | "function" . $@8 "(" idlist ")" block

    ID  shift, and go to state 53

    $default  reduce using rule 78 ($@8)

    $@8  go to state 54


State 14

  103 returnstmt: "return" . expr ";"
  104           | "return" . ";"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    ";"      shift, and go to state 55
    "::"     shift, and go to state 24

    expr        go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 15

   10 stmt: "break" . ";"

    ";"  shift, and go to state 57


State 16

   11 stmt: "continue" . ";"

    ";"  shift, and go to state 58


State 17

   34 term: "not" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 59
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 18

   47 lvalue: "local" . ID

    ID  shift, and go to state 60


State 19

   83 const: "nil" .

    $default  reduce using rule 83 (const)


State 20

   64 objectdef: "[" . elist "]"
   65          | "[" . indexed "]"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "{"      shift, and go to state 61
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr         go to state 62
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 63
    objectdef    go to state 35
    indexed      go to state 64
    indexedelem  go to state 65
    const        go to state 38


State 21

   71 block: "{" . $@2 liststmt "}" $@3
   74      | "{" . $@4 "}" $@5

    "}"       reduce using rule 72 ($@4)
    $default  reduce using rule 69 ($@2)

    $@2  go to state 66
    $@4  go to state 67


State 22

   32 term: "(" . expr ")"
   44 primary: "(" . funcdef ")"
   56 call: "(" . funcdef ")" "(" elist ")"

    ID          shift, and go to state 1
    STRING      shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    "-"         shift, and go to state 7
    "++"        shift, and go to state 8
    "--"        shift, and go to state 9
    "function"  shift, and go to state 13
    "not"       shift, and go to state 17
    "local"     shift, and go to state 18
    "nil"       shift, and go to state 19
    "["         shift, and go to state 20
    "("         shift, and go to state 22
    "::"        shift, and go to state 24

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 69
    const       go to state 38


State 23

   14 stmt: ";" .

    $default  reduce using rule 14 (stmt)


State 24

   48 lvalue: "::" . ID

    ID  shift, and go to state 70


State 25

    0 $accept: program . $end

    $end  shift, and go to state 71


State 26

    1 program: liststmt .
    3 liststmt: liststmt . stmt

    ID          shift, and go to state 1
    STRING      shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    "-"         shift, and go to state 7
    "++"        shift, and go to state 8
    "--"        shift, and go to state 9
    "if"        shift, and go to state 10
    "while"     shift, and go to state 11
    "for"       shift, and go to state 12
    "function"  shift, and go to state 13
    "return"    shift, and go to state 14
    "break"     shift, and go to state 15
    "continue"  shift, and go to state 16
    "not"       shift, and go to state 17
    "local"     shift, and go to state 18
    "nil"       shift, and go to state 19
    "["         shift, and go to state 20
    "{"         shift, and go to state 21
    "("         shift, and go to state 22
    ";"         shift, and go to state 23
    "::"        shift, and go to state 24

    $default  reduce using rule 1 (program)

    stmt        go to state 72
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 27

    4 liststmt: stmt .

    $default  reduce using rule 4 (liststmt)


State 28

    5 stmt: expr . ";"
   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    ";"   shift, and go to state 85

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 29

   17 expr: term .

    $default  reduce using rule 17 (expr)


State 30

   16 expr: assignexpr .

    $default  reduce using rule 16 (expr)


State 31

   39 term: primary .

    $default  reduce using rule 39 (term)


State 32

   36 term: lvalue . "++"
   38     | lvalue . "--"
   40 assignexpr: lvalue . "=" expr
   41 primary: lvalue .
   50 member: lvalue . "." ID
   51       | lvalue . "[" expr "]"
   55 call: lvalue . callsuffix

    "="   shift, and go to state 87
    "++"  shift, and go to state 88
    "--"  shift, and go to state 89
    "["   shift, and go to state 90
    "("   shift, and go to state 91
    "."   shift, and go to state 92
    ".."  shift, and go to state 93

    $default  reduce using rule 41 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 33

   49 lvalue: member .

    $default  reduce using rule 49 (lvalue)


State 34

   42 primary: call .
   52 member: call . "." ID
   53       | call . "[" expr "]"
   54 call: call . "(" elist ")"

    "["  shift, and go to state 97
    "("  shift, and go to state 98
    "."  shift, and go to state 99

    $default  reduce using rule 42 (primary)


State 35

   43 primary: objectdef .

    $default  reduce using rule 43 (primary)


State 36

   12 stmt: block .

    $default  reduce using rule 12 (stmt)


State 37

   13 stmt: funcdef .

    $default  reduce using rule 13 (stmt)


State 38

   45 primary: const .

    $default  reduce using rule 45 (primary)


State 39

   91 ifstmt: ifprefix . stmt elseprefix stmt
   92       | ifprefix . stmt

    ID          shift, and go to state 1
    STRING      shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    "-"         shift, and go to state 7
    "++"        shift, and go to state 8
    "--"        shift, and go to state 9
    "if"        shift, and go to state 10
    "while"     shift, and go to state 11
    "for"       shift, and go to state 12
    "function"  shift, and go to state 13
    "return"    shift, and go to state 14
    "break"     shift, and go to state 15
    "continue"  shift, and go to state 16
    "not"       shift, and go to state 17
    "local"     shift, and go to state 18
    "nil"       shift, and go to state 19
    "["         shift, and go to state 20
    "{"         shift, and go to state 21
    "("         shift, and go to state 22
    ";"         shift, and go to state 23
    "::"        shift, and go to state 24

    stmt        go to state 100
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 40

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 41

   98 whilestmt: whilestart . whilecond loopstmt

    "("  shift, and go to state 101

    whilecond  go to state 102


State 42

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 43

  102 forstmt: forprefix . N elist ")" N loopstmt N

    $default  reduce using rule 99 (N)

    N  go to state 103


State 44

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 45

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 46

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   33 term: "-" expr .

    "and"     reduce using rule 29 ($@1)
    "and"     [reduce using rule 33 (term)]
    $default  reduce using rule 33 (term)

    $@1  go to state 86


State 47

   56 call: "(" . funcdef ")" "(" elist ")"

    "function"  shift, and go to state 13

    funcdef  go to state 104


State 48

   35 term: "++" lvalue .
   50 member: lvalue . "." ID
   51       | lvalue . "[" expr "]"
   55 call: lvalue . callsuffix

    "["   shift, and go to state 90
    "("   shift, and go to state 91
    "."   shift, and go to state 92
    ".."  shift, and go to state 93

    $default  reduce using rule 35 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 49

   52 member: call . "." ID
   53       | call . "[" expr "]"
   54 call: call . "(" elist ")"

    "["  shift, and go to state 97
    "("  shift, and go to state 98
    "."  shift, and go to state 99


State 50

   37 term: "--" lvalue .
   50 member: lvalue . "." ID
   51       | lvalue . "[" expr "]"
   55 call: lvalue . callsuffix

    "["   shift, and go to state 90
    "("   shift, and go to state 91
    "."   shift, and go to state 92
    ".."  shift, and go to state 93

    $default  reduce using rule 37 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 51

   89 ifprefix: "if" "(" . expr ")"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 105
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 52

  101 forprefix: "for" "(" . elist ";" M expr ";"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 106
    objectdef   go to state 35
    const       go to state 38


State 53

   77 funcdef: "function" ID . $@6 "(" idlist ")" @7 block

    $default  reduce using rule 75 ($@6)

    $@6  go to state 107


State 54

   79 funcdef: "function" $@8 . "(" idlist ")" block

    "("  shift, and go to state 108


State 55

  104 returnstmt: "return" ";" .

    $default  reduce using rule 104 (returnstmt)


State 56

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
  103 returnstmt: "return" expr . ";"

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    ";"   shift, and go to state 109

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 57

   10 stmt: "break" ";" .

    $default  reduce using rule 10 (stmt)


State 58

   11 stmt: "continue" ";" .

    $default  reduce using rule 11 (stmt)


State 59

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   34 term: "not" expr .

    "and"     reduce using rule 29 ($@1)
    "and"     [reduce using rule 34 (term)]
    $default  reduce using rule 34 (term)

    $@1  go to state 86


State 60

   47 lvalue: "local" ID .

    $default  reduce using rule 47 (lvalue)


State 61

   68 indexedelem: "{" . expr ":" expr "}"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 110
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 62

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   63 elist: expr .

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84

    "and"     reduce using rule 29 ($@1)
    $default  reduce using rule 63 (elist)

    $@1  go to state 86


State 63

   62 elist: elist . "," expr
   64 objectdef: "[" elist . "]"

    "]"  shift, and go to state 111
    ","  shift, and go to state 112


State 64

   65 objectdef: "[" indexed . "]"
   66 indexed: indexed . "," indexedelem

    "]"  shift, and go to state 113
    ","  shift, and go to state 114


State 65

   67 indexed: indexedelem .

    $default  reduce using rule 67 (indexed)


State 66

   71 block: "{" $@2 . liststmt "}" $@3

    ID          shift, and go to state 1
    STRING      shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    "-"         shift, and go to state 7
    "++"        shift, and go to state 8
    "--"        shift, and go to state 9
    "if"        shift, and go to state 10
    "while"     shift, and go to state 11
    "for"       shift, and go to state 12
    "function"  shift, and go to state 13
    "return"    shift, and go to state 14
    "break"     shift, and go to state 15
    "continue"  shift, and go to state 16
    "not"       shift, and go to state 17
    "local"     shift, and go to state 18
    "nil"       shift, and go to state 19
    "["         shift, and go to state 20
    "{"         shift, and go to state 21
    "("         shift, and go to state 22
    ";"         shift, and go to state 23
    "::"        shift, and go to state 24

    liststmt    go to state 115
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 67

   74 block: "{" $@4 . "}" $@5

    "}"  shift, and go to state 116


State 68

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   32 term: "(" expr . ")"

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    ")"   shift, and go to state 117

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 69

   44 primary: "(" funcdef . ")"
   56 call: "(" funcdef . ")" "(" elist ")"

    ")"  shift, and go to state 118


State 70

   48 lvalue: "::" ID .

    $default  reduce using rule 48 (lvalue)


State 71

    0 $accept: program $end .

    $default  accept


State 72

    3 liststmt: liststmt stmt .

    $default  reduce using rule 3 (liststmt)


State 73

   25 expr: expr "<=" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 74

   26 expr: expr "<" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   28 expr: expr "!=" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   23 expr: expr ">=" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   24 expr: expr ">" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   27 expr: expr "==" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   18 expr: expr "+" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   19 expr: expr "-" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

   20 expr: expr "*" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 82

   21 expr: expr "/" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 83

   22 expr: expr "%" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 84

   31 expr: expr "or" . Me expr

    $default  reduce using rule 15 (Me)

    Me  go to state 130


State 85

    5 stmt: expr ";" .

    $default  reduce using rule 5 (stmt)


State 86

   30 expr: expr $@1 . "and" Me expr

    "and"  shift, and go to state 131


State 87

   40 assignexpr: lvalue "=" . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 88

   36 term: lvalue "++" .

    $default  reduce using rule 36 (term)


State 89

   38 term: lvalue "--" .

    $default  reduce using rule 38 (term)


State 90

   51 member: lvalue "[" . expr "]"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 133
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 91

   59 normcall: "(" . elist ")"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 134
    objectdef   go to state 35
    const       go to state 38


State 92

   50 member: lvalue "." . ID

    ID  shift, and go to state 135


State 93

   60 methodcall: ".." . ID "(" elist ")"

    ID  shift, and go to state 136


State 94

   55 call: lvalue callsuffix .

    $default  reduce using rule 55 (call)


State 95

   57 callsuffix: normcall .

    $default  reduce using rule 57 (callsuffix)


State 96

   58 callsuffix: methodcall .

    $default  reduce using rule 58 (callsuffix)


State 97

   53 member: call "[" . expr "]"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 137
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 98

   54 call: call "(" . elist ")"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 138
    objectdef   go to state 35
    const       go to state 38


State 99

   52 member: call "." . ID

    ID  shift, and go to state 139


State 100

   91 ifstmt: ifprefix stmt . elseprefix stmt
   92       | ifprefix stmt .

    "else"  shift, and go to state 140

    "else"    [reduce using rule 92 (ifstmt)]
    $default  reduce using rule 92 (ifstmt)

    elseprefix  go to state 141


State 101

   97 whilecond: "(" . expr ")"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 142
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 102

   98 whilestmt: whilestart whilecond . loopstmt

    $default  reduce using rule 93 (loopstart)

    loopstart  go to state 143
    loopstmt   go to state 144


State 103

  102 forstmt: forprefix N . elist ")" N loopstmt N

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 145
    objectdef   go to state 35
    const       go to state 38


State 104

   56 call: "(" funcdef . ")" "(" elist ")"

    ")"  shift, and go to state 146


State 105

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   89 ifprefix: "if" "(" expr . ")"

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    ")"   shift, and go to state 147

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 106

   62 elist: elist . "," expr
  101 forprefix: "for" "(" elist . ";" M expr ";"

    ";"  shift, and go to state 148
    ","  shift, and go to state 112


State 107

   77 funcdef: "function" ID $@6 . "(" idlist ")" @7 block

    "("  shift, and go to state 149


State 108

   79 funcdef: "function" $@8 "(" . idlist ")" block

    ID  shift, and go to state 150

    $default  reduce using rule 86 (idlist)

    idlist  go to state 151


State 109

  103 returnstmt: "return" expr ";" .

    $default  reduce using rule 103 (returnstmt)


State 110

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   68 indexedelem: "{" expr . ":" expr "}"

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    ":"   shift, and go to state 152

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 111

   64 objectdef: "[" elist "]" .

    $default  reduce using rule 64 (objectdef)


State 112

   62 elist: elist "," . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 153
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 113

   65 objectdef: "[" indexed "]" .

    $default  reduce using rule 65 (objectdef)


State 114

   66 indexed: indexed "," . indexedelem

    "{"  shift, and go to state 61

    indexedelem  go to state 154


State 115

    3 liststmt: liststmt . stmt
   71 block: "{" $@2 liststmt . "}" $@3

    ID          shift, and go to state 1
    STRING      shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    "-"         shift, and go to state 7
    "++"        shift, and go to state 8
    "--"        shift, and go to state 9
    "if"        shift, and go to state 10
    "while"     shift, and go to state 11
    "for"       shift, and go to state 12
    "function"  shift, and go to state 13
    "return"    shift, and go to state 14
    "break"     shift, and go to state 15
    "continue"  shift, and go to state 16
    "not"       shift, and go to state 17
    "local"     shift, and go to state 18
    "nil"       shift, and go to state 19
    "["         shift, and go to state 20
    "{"         shift, and go to state 21
    "}"         shift, and go to state 155
    "("         shift, and go to state 22
    ";"         shift, and go to state 23
    "::"        shift, and go to state 24

    stmt        go to state 72
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 116

   74 block: "{" $@4 "}" . $@5

    $default  reduce using rule 73 ($@5)

    $@5  go to state 156


State 117

   32 term: "(" expr ")" .

    $default  reduce using rule 32 (term)


State 118

   44 primary: "(" funcdef ")" .
   56 call: "(" funcdef ")" . "(" elist ")"

    "("  shift, and go to state 157

    $default  reduce using rule 44 (primary)


State 119

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   25     | expr "<=" expr .
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "+"  shift, and go to state 79
    "-"  shift, and go to state 80
    "*"  shift, and go to state 81
    "/"  shift, and go to state 82
    "%"  shift, and go to state 83

    "<="  error (nonassociative)
    "<"   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)

    "and"     reduce using rule 25 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 25 (expr)

    $@1  go to state 86


State 120

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   26     | expr "<" expr .
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "+"  shift, and go to state 79
    "-"  shift, and go to state 80
    "*"  shift, and go to state 81
    "/"  shift, and go to state 82
    "%"  shift, and go to state 83

    "<="  error (nonassociative)
    "<"   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)

    "and"     reduce using rule 26 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 26 (expr)

    $@1  go to state 86


State 121

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   28     | expr "!=" expr .
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83

    "!="  error (nonassociative)
    "=="  error (nonassociative)

    "and"     reduce using rule 28 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 28 (expr)

    $@1  go to state 86


State 122

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   23     | expr ">=" expr .
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "+"  shift, and go to state 79
    "-"  shift, and go to state 80
    "*"  shift, and go to state 81
    "/"  shift, and go to state 82
    "%"  shift, and go to state 83

    "<="  error (nonassociative)
    "<"   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)

    "and"     reduce using rule 23 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 23 (expr)

    $@1  go to state 86


State 123

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   24     | expr ">" expr .
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "+"  shift, and go to state 79
    "-"  shift, and go to state 80
    "*"  shift, and go to state 81
    "/"  shift, and go to state 82
    "%"  shift, and go to state 83

    "<="  error (nonassociative)
    "<"   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)

    "and"     reduce using rule 24 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 24 (expr)

    $@1  go to state 86


State 124

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   27     | expr "==" expr .
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83

    "!="  error (nonassociative)
    "=="  error (nonassociative)

    "and"     reduce using rule 27 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 27 (expr)

    $@1  go to state 86


State 125

   18 expr: expr . "+" expr
   18     | expr "+" expr .
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "-"  shift, and go to state 80
    "*"  shift, and go to state 81
    "/"  shift, and go to state 82
    "%"  shift, and go to state 83

    "and"     reduce using rule 18 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 18 (expr)

    $@1  go to state 86


State 126

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   19     | expr "-" expr .
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "-"  shift, and go to state 80
    "*"  shift, and go to state 81
    "/"  shift, and go to state 82
    "%"  shift, and go to state 83

    "and"     reduce using rule 19 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 19 (expr)

    $@1  go to state 86


State 127

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   20     | expr "*" expr .
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "and"     reduce using rule 20 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 20 (expr)

    $@1  go to state 86


State 128

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   21     | expr "/" expr .
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "and"     reduce using rule 21 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 21 (expr)

    $@1  go to state 86


State 129

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   22     | expr "%" expr .
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr

    "and"     reduce using rule 22 (expr)
    "and"     [reduce using rule 29 ($@1)]
    $default  reduce using rule 22 (expr)

    $@1  go to state 86


State 130

   31 expr: expr "or" Me . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 158
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 131

   30 expr: expr $@1 "and" . Me expr

    $default  reduce using rule 15 (Me)

    Me  go to state 159


State 132

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   40 assignexpr: lvalue "=" expr .

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84

    "and"     reduce using rule 29 ($@1)
    "and"     [reduce using rule 40 (assignexpr)]
    $default  reduce using rule 40 (assignexpr)

    $@1  go to state 86


State 133

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   51 member: lvalue "[" expr . "]"

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    "]"   shift, and go to state 160

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 134

   59 normcall: "(" elist . ")"
   62 elist: elist . "," expr

    ")"  shift, and go to state 161
    ","  shift, and go to state 112


State 135

   50 member: lvalue "." ID .

    $default  reduce using rule 50 (member)


State 136

   60 methodcall: ".." ID . "(" elist ")"

    "("  shift, and go to state 162


State 137

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   53 member: call "[" expr . "]"

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    "]"   shift, and go to state 163

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 138

   54 call: call "(" elist . ")"
   62 elist: elist . "," expr

    ")"  shift, and go to state 164
    ","  shift, and go to state 112


State 139

   52 member: call "." ID .

    $default  reduce using rule 52 (member)


State 140

   90 elseprefix: "else" .

    $default  reduce using rule 90 (elseprefix)


State 141

   91 ifstmt: ifprefix stmt elseprefix . stmt

    ID          shift, and go to state 1
    STRING      shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    "-"         shift, and go to state 7
    "++"        shift, and go to state 8
    "--"        shift, and go to state 9
    "if"        shift, and go to state 10
    "while"     shift, and go to state 11
    "for"       shift, and go to state 12
    "function"  shift, and go to state 13
    "return"    shift, and go to state 14
    "break"     shift, and go to state 15
    "continue"  shift, and go to state 16
    "not"       shift, and go to state 17
    "local"     shift, and go to state 18
    "nil"       shift, and go to state 19
    "["         shift, and go to state 20
    "{"         shift, and go to state 21
    "("         shift, and go to state 22
    ";"         shift, and go to state 23
    "::"        shift, and go to state 24

    stmt        go to state 165
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 142

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   97 whilecond: "(" expr . ")"

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    ")"   shift, and go to state 166

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 143

   95 loopstmt: loopstart . stmt loopend

    ID          shift, and go to state 1
    STRING      shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    TRUE        shift, and go to state 5
    FALSE       shift, and go to state 6
    "-"         shift, and go to state 7
    "++"        shift, and go to state 8
    "--"        shift, and go to state 9
    "if"        shift, and go to state 10
    "while"     shift, and go to state 11
    "for"       shift, and go to state 12
    "function"  shift, and go to state 13
    "return"    shift, and go to state 14
    "break"     shift, and go to state 15
    "continue"  shift, and go to state 16
    "not"       shift, and go to state 17
    "local"     shift, and go to state 18
    "nil"       shift, and go to state 19
    "["         shift, and go to state 20
    "{"         shift, and go to state 21
    "("         shift, and go to state 22
    ";"         shift, and go to state 23
    "::"        shift, and go to state 24

    stmt        go to state 167
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestart  go to state 41
    whilestmt   go to state 42
    forprefix   go to state 43
    forstmt     go to state 44
    returnstmt  go to state 45


State 144

   98 whilestmt: whilestart whilecond loopstmt .

    $default  reduce using rule 98 (whilestmt)


State 145

   62 elist: elist . "," expr
  102 forstmt: forprefix N elist . ")" N loopstmt N

    ")"  shift, and go to state 168
    ","  shift, and go to state 112


State 146

   56 call: "(" funcdef ")" . "(" elist ")"

    "("  shift, and go to state 157


State 147

   89 ifprefix: "if" "(" expr ")" .

    $default  reduce using rule 89 (ifprefix)


State 148

  101 forprefix: "for" "(" elist ";" . M expr ";"

    $default  reduce using rule 100 (M)

    M  go to state 169


State 149

   77 funcdef: "function" ID $@6 "(" . idlist ")" @7 block

    ID  shift, and go to state 150

    $default  reduce using rule 86 (idlist)

    idlist  go to state 170


State 150

   88 idlist: ID .

    $default  reduce using rule 88 (idlist)


State 151

   79 funcdef: "function" $@8 "(" idlist . ")" block
   87 idlist: idlist . "," ID

    ")"  shift, and go to state 171
    ","  shift, and go to state 172


State 152

   68 indexedelem: "{" expr ":" . expr "}"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 173
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 153

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   62 elist: elist "," expr .

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84

    "and"     reduce using rule 29 ($@1)
    $default  reduce using rule 62 (elist)

    $@1  go to state 86


State 154

   66 indexed: indexed "," indexedelem .

    $default  reduce using rule 66 (indexed)


State 155

   71 block: "{" $@2 liststmt "}" . $@3

    $default  reduce using rule 70 ($@3)

    $@3  go to state 174


State 156

   74 block: "{" $@4 "}" $@5 .

    $default  reduce using rule 74 (block)


State 157

   56 call: "(" funcdef ")" "(" . elist ")"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 175
    objectdef   go to state 35
    const       go to state 38


State 158

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   31     | expr "or" Me expr .

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83

    "and"     reduce using rule 29 ($@1)
    "and"     [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)

    $@1  go to state 86


State 159

   30 expr: expr $@1 "and" Me . expr

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 176
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 160

   51 member: lvalue "[" expr "]" .

    $default  reduce using rule 51 (member)


State 161

   59 normcall: "(" elist ")" .

    $default  reduce using rule 59 (normcall)


State 162

   60 methodcall: ".." ID "(" . elist ")"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 62
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 177
    objectdef   go to state 35
    const       go to state 38


State 163

   53 member: call "[" expr "]" .

    $default  reduce using rule 53 (member)


State 164

   54 call: call "(" elist ")" .

    $default  reduce using rule 54 (call)


State 165

   91 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 91 (ifstmt)


State 166

   97 whilecond: "(" expr ")" .

    $default  reduce using rule 97 (whilecond)


State 167

   95 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 94 (loopend)

    loopend  go to state 178


State 168

  102 forstmt: forprefix N elist ")" . N loopstmt N

    $default  reduce using rule 99 (N)

    N  go to state 179


State 169

  101 forprefix: "for" "(" elist ";" M . expr ";"

    ID       shift, and go to state 1
    STRING   shift, and go to state 2
    INT      shift, and go to state 3
    DOUBLE   shift, and go to state 4
    TRUE     shift, and go to state 5
    FALSE    shift, and go to state 6
    "-"      shift, and go to state 7
    "++"     shift, and go to state 8
    "--"     shift, and go to state 9
    "not"    shift, and go to state 17
    "local"  shift, and go to state 18
    "nil"    shift, and go to state 19
    "["      shift, and go to state 20
    "("      shift, and go to state 22
    "::"     shift, and go to state 24

    expr        go to state 180
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 170

   77 funcdef: "function" ID $@6 "(" idlist . ")" @7 block
   87 idlist: idlist . "," ID

    ")"  shift, and go to state 181
    ","  shift, and go to state 172


State 171

   79 funcdef: "function" $@8 "(" idlist ")" . block

    "{"  shift, and go to state 21

    block  go to state 182


State 172

   87 idlist: idlist "," . ID

    ID  shift, and go to state 183


State 173

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
   68 indexedelem: "{" expr ":" expr . "}"

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    "}"   shift, and go to state 184

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 174

   71 block: "{" $@2 liststmt "}" $@3 .

    $default  reduce using rule 71 (block)


State 175

   56 call: "(" funcdef ")" "(" elist . ")"
   62 elist: elist . "," expr

    ")"  shift, and go to state 185
    ","  shift, and go to state 112


State 176

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   30     | expr $@1 "and" Me expr .
   31     | expr . "or" Me expr

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83

    "and"     reduce using rule 29 ($@1)
    "and"     [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)

    $@1  go to state 86


State 177

   60 methodcall: ".." ID "(" elist . ")"
   62 elist: elist . "," expr

    ")"  shift, and go to state 186
    ","  shift, and go to state 112


State 178

   95 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 95 (loopstmt)


State 179

  102 forstmt: forprefix N elist ")" N . loopstmt N

    $default  reduce using rule 93 (loopstart)

    loopstart  go to state 143
    loopstmt   go to state 187


State 180

   18 expr: expr . "+" expr
   19     | expr . "-" expr
   20     | expr . "*" expr
   21     | expr . "/" expr
   22     | expr . "%" expr
   23     | expr . ">=" expr
   24     | expr . ">" expr
   25     | expr . "<=" expr
   26     | expr . "<" expr
   27     | expr . "==" expr
   28     | expr . "!=" expr
   30     | expr . $@1 "and" Me expr
   31     | expr . "or" Me expr
  101 forprefix: "for" "(" elist ";" M expr . ";"

    "<="  shift, and go to state 73
    "<"   shift, and go to state 74
    "!="  shift, and go to state 75
    ">="  shift, and go to state 76
    ">"   shift, and go to state 77
    "=="  shift, and go to state 78
    "+"   shift, and go to state 79
    "-"   shift, and go to state 80
    "*"   shift, and go to state 81
    "/"   shift, and go to state 82
    "%"   shift, and go to state 83
    "or"  shift, and go to state 84
    ";"   shift, and go to state 188

    $default  reduce using rule 29 ($@1)

    $@1  go to state 86


State 181

   77 funcdef: "function" ID $@6 "(" idlist ")" . @7 block

    $default  reduce using rule 76 (@7)

    @7  go to state 189


State 182

   79 funcdef: "function" $@8 "(" idlist ")" block .

    $default  reduce using rule 79 (funcdef)


State 183

   87 idlist: idlist "," ID .

    $default  reduce using rule 87 (idlist)


State 184

   68 indexedelem: "{" expr ":" expr "}" .

    $default  reduce using rule 68 (indexedelem)


State 185

   56 call: "(" funcdef ")" "(" elist ")" .

    $default  reduce using rule 56 (call)


State 186

   60 methodcall: ".." ID "(" elist ")" .

    $default  reduce using rule 60 (methodcall)


State 187

  102 forstmt: forprefix N elist ")" N loopstmt . N

    $default  reduce using rule 99 (N)

    N  go to state 190


State 188

  101 forprefix: "for" "(" elist ";" M expr ";" .

    $default  reduce using rule 101 (forprefix)


State 189

   77 funcdef: "function" ID $@6 "(" idlist ")" @7 . block

    "{"  shift, and go to state 21

    block  go to state 191


State 190

  102 forstmt: forprefix N elist ")" N loopstmt N .

    $default  reduce using rule 102 (forstmt)


State 191

   77 funcdef: "function" ID $@6 "(" idlist ")" @7 block .

    $default  reduce using rule 77 (funcdef)
